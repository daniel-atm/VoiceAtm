{"version":3,"sources":["utils/Robot.js","utils/sleep.js","components/SecretNumber.js","components/SelectTransaction.js","components/SelectAccountType.js","components/Withdrawal.js","components/TakeCash.js","App.js","stores/LocalStorage.js","stores/Request.js","stores/AuthStore.js","stores/index.js","index.js"],"names":["Robot","Object","classCallCheck","this","SpeechRecognition","window","webkitSpeechRecognition","speechSynthesis","rate","recognition","recognizing","onstart","onend","onerror","event","createClass","key","value","text","_this","Promise","resolve","reject","utterance","SpeechSynthesisUtterance","speak","addEventListener","_this2","islistening","stop","console","log","results","speechToText","transcript","isFinal","start","error","sleep","timeout","setTimeout","SecretNumber","password","listenToPassword","_callee","_this$props","robot","result","regenerator_default","a","wrap","_context","prev","next","props","say","listen","sent","setPassword","submit","t0","_callee2","e","_this$props2","_context2","preventDefault","react_default","createElement","style","display","alignItems","flexDirection","justifyItems","justifyContent","height","color","textAlign","onSubmit","FormControl_default","margin","required","fullWidth","border","Input_default","onChange","target","name","autoFocus","Component","withRouter","inject","observer","decorate","step","observable","setStep","action","SelectTransaction","listenToTransactionType","setType","toLowerCase","buttonClick","textContent","rowStyle","index_es","size","variant","onClick","SelectAccountType","listenToAccountType","includes","float","marginRight","Withdrawal","amount","setAmount","listenToAmountToWithdraw","type","TakeCash","src","alt","width","components_TakeCash","App","nextStep","showPincode","showSelectTransaction","showSelectAccountType","showTakeCash","nextAfterAccountType","document","body","click","alertify","alert","className","Card_default","components_SecretNumber","components_SelectTransaction","components_SelectAccountType","components_Withdrawal","src_App_0","LocalStorage","storage","getItem","defaultValue","JSON","getRaw","parse","setItem","setRaw","stringify","removeItem","Request","axios","interceptors","response","use","data","request","_this$axios","get","apply","arguments","_this$axios2","post","_this$axios3","put","_this$axios4","head","_this$axios5","delete","uri","file","formData","FormData","append","url","thumb","getThumbUrl","urlArr","split","filename","pop","baseUrl","join","concat","AuthStore","localStorage","username","confirm_password","email","phoneNumber","address","accountType","image","loading","authenticated","user","then","setUsername","setAuthenticated","setUser","set","imageUri","phone","uploadFile","setImageUri","setLoading","message","Error","is_business","Number","is_customer","handleAuthenticated","bind","catch","handleResponse","uploadProfilePicture","warn","_context6","remove","Boolean","business","setConfirmPassword","setAccountType","setEmail","setName","setAddress","setPhoneNumber","detailsValid","computed","registrationComplete","resetForm","bound","login","logout","configure","enforceActions","stores","authStore","providers","objectSpread","ReactDOM","render","index_module","HashRouter","getElementById"],"mappings":"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","file":"static/js/main.d9bf8184.chunk.js","sourcesContent":["export class Robot {\r\n    constructor() {\r\n        const SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\r\n        this.speechSynthesis = window.speechSynthesis;\r\n        this.speechSynthesis.rate = 1;\r\n        const recognition = new SpeechRecognition();\r\n        this.recognizing=false;\r\n        recognition.onstart = function () {\r\n            this.recognizing = true;\r\n        };\r\n        \r\n        recognition.onend = function () {\r\n            this.recognizing = false;\r\n        };\r\n        \r\n        recognition.onerror = function (event) {\r\n            this.recognizing = false;\r\n        };\r\n        this.recognition=recognition;\r\n    }\r\n    say(text) {\r\n        return new Promise((resolve, reject) => {\r\n            const utterance = new SpeechSynthesisUtterance(text);\r\n            utterance.rate = 0.6\r\n            this.speechSynthesis.speak(utterance)\r\n            utterance.addEventListener('end', resolve)\r\n        });       \r\n    }\r\n    islistening(){\r\n        return this.recognizing;\r\n    }\r\n    listen() {\r\n        return new Promise((resolve, reject) => {\r\n            if(this.islistening()){\r\n                const SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\r\n                this.recognition.stop()\r\n                this.recognition = new SpeechRecognition();\r\n            }\r\n            this.recognition.addEventListener('result', function (event) {\r\n                this.recognizing = true;\r\n                console.log(\"All results\", event.results)\r\n                const speechToText = event.results[0][0].transcript;\r\n                console.log(\"Speech to text\", speechToText)\r\n                if (event.results[0].isFinal) {\r\n                    resolve(speechToText);\r\n                }\r\n            });\r\n            this.recognition.addEventListener('error', function (event) {\r\n                this.recognizing = false;\r\n                console.log('Recognition error');\r\n                reject(\"Error occured while recognizing speech\");\r\n             });\r\n             this.recognition.addEventListener('nomatch', function () {\r\n                this.recognizing = false;\r\n                console.log('Error: sorry but I could not find a match');\r\n                reject('Sorry but I could not find a match');\r\n             });\r\n             this.recognition.addEventListener('end', function () {\r\n                this.recognizing = false;\r\n                console.log('Error: sorry but I could not recognize your speech');\r\n                reject('Sorry but I could not recognize your speech');\r\n             });\r\n            try {\r\n                this.recognition.start();\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n           \r\n            console.log(\"Speach recognition server started\")\r\n        });\r\n    }\r\n}\r\n\r\nexport class RobotMock {\r\n    index=0;\r\n    constructor() {\r\n        \r\n    }\r\n    say(text) {\r\n        console.log(\"Atm talking: \"+text)\r\n    }\r\n    listen() {\r\n        let results=[\"1234\", \"withdrawal\",\"Savings\",1000];\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                const speechToText=results[this.index++];\r\n                console.log(\"Speech to text\", speechToText)\r\n                resolve(speechToText);\r\n\r\n            }, 500);\r\n        });\r\n    }\r\n}","export function sleep(timeout){\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve()\r\n        }, timeout);\r\n    });   \r\n}\r\n","import React, { Component, Fragment, useState } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { decorate, observable, action } from 'mobx';\r\nimport { withRouter } from 'react-router-dom';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport { sleep } from '../utils/sleep';\r\nclass SecretNumber extends Component {\r\n    password = \"\"\r\n    componentDidMount() {\r\n        this.listenToPassword()\r\n        \r\n    }\r\n     listenToPassword=async ()=>{\r\n        const { robot, next } = this.props;\r\n        await robot.say(\"Please say your secret number\")\r\n        try {\r\n            let result=await robot.listen()\r\n            this.setPassword(result)\r\n            sleep(500)\r\n            this.submit()\r\n        } catch (error) {\r\n            await robot.say(error)\r\n            this.listenToPassword()\r\n        }\r\n    }\r\n    submit = async (e) => {\r\n        // eslint-disable-next-line no-unused-expressions\r\n        e && e.preventDefault();\r\n        const { robot, next } = this.props;\r\n        \r\n        if(this.password){\r\n        \r\n            setTimeout(() => {\r\n                next()\r\n            }, 500);\r\n        }\r\n        \r\n        //this.setStep(this.step + 1)\r\n    }\r\n    setPassword = (password) => {\r\n        this.password = password;\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column', justifyItems: 'center', justifyContent: 'center', height: '100%' }}>\r\n                <h1 style={{ color: 'blue', textAlign: 'center' }}>Please say your secret number</h1>\r\n                <form onSubmit={this.submit} style={{ textAlign: 'center' }}>\r\n                    <FormControl margin=\"normal\" required fullWidth style={{ border: '3px solid blue' }}>\r\n                        <Input onChange={(e)=>this.setPassword(e.target.value)} name=\"email\" autoFocus value={this.password} />\r\n                    </FormControl>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(inject('robot')(\r\n    observer(decorate(SecretNumber, {\r\n        step: observable,\r\n        setStep: action,\r\n        password: observable,\r\n        setPassword: action\r\n    }))\r\n));","import React, { Component, Fragment, useState } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { decorate, observable, action } from 'mobx';\r\nimport { withRouter } from 'react-router-dom';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport { Button } from '@material-ui/core';\r\nclass SelectTransaction extends Component {\r\n    password = \"\"\r\n    componentDidMount() {\r\n        this.listenToTransactionType()\r\n    }\r\n     listenToTransactionType=async ()=>{\r\n        const { robot, next, setType } = this.props;\r\n        await robot.say(\"Select a transaction\")\r\n        try {\r\n            let text=await robot.listen()\r\n            if(text.toLowerCase()===\"withdrawal\"){\r\n                setType(text.toLowerCase());\r\n                next()\r\n            }\r\n            else{\r\n                await robot.say(\"Can't understand your option\");\r\n                setTimeout(this.listenToTransactionType, 0);\r\n            }\r\n        } catch (error) {\r\n            await robot.say(error)\r\n            this.listenToTransactionType()\r\n        }\r\n    }\r\n    buttonClick=(e)=>{\r\n        const { setType,next } = this.props;\r\n        setType(e.target.textContent);\r\n        next()\r\n    }\r\n    render() {\r\n        const rowStyle={display: 'flex', 'justifyContent': 'space-around'};\r\n        return (\r\n            <div style={{ height: '100%' }}>\r\n                <h1 style={{ color: 'blue', textAlign: 'center' }}>Select a transaction</h1>\r\n                <div style={ {display: 'flex',flexDirection: 'column',height: 'calc(100% - 100px)', justifyContent: 'space-around'}}>\r\n                    <div style={rowStyle}>\r\n                        <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={this.buttonClick}>Transfer</Button>\r\n                        <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={this.buttonClick}>Withdrawal</Button>\r\n                    </div>\r\n                    <div style={rowStyle}>\r\n                        <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={this.buttonClick}>Balance</Button>\r\n                        <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={this.buttonClick}>Pay Bills</Button>\r\n                    </div>\r\n                    <div style={rowStyle}>\r\n                        <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={this.buttonClick}>Change Pin</Button>\r\n                        <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={this.buttonClick}>Exit</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(inject('robot')(\r\n    observer(decorate(SelectTransaction, {\r\n        step: observable,\r\n        setStep: action,\r\n        password: observable,\r\n        setPassword: action\r\n    }))\r\n));","import React, { Component, Fragment, useState } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { decorate, observable, action } from 'mobx';\r\nimport { withRouter } from 'react-router-dom';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport { Button } from '@material-ui/core';\r\nclass SelectAccountType extends Component {\r\n    password = \"\"\r\n    componentDidMount() {\r\n        this.listenToAccountType()\r\n    }\r\n    listenToAccountType=async ()=>{\r\n        const { robot, next } = this.props;\r\n        await robot.say(\"Select your account type\")\r\n        try {\r\n            let text = await robot.listen();\r\n            if(['current','savings'].includes(text.toLowerCase())){\r\n                next()\r\n            }\r\n            else{\r\n                await robot.say(\"Can't understand your option\")\r\n            }\r\n        } catch (error) {\r\n            await robot.say(error)\r\n            this.listenToAccountType()\r\n        }\r\n    }\r\n    render() {\r\n        const { robot, next } = this.props;\r\n\r\n        return (\r\n            <div style={{ height: '100%' }}>\r\n                <h1 style={{ color: 'blue', textAlign: 'center' }}>Select your account type</h1>\r\n                <div style={{ float:'right', marginRight: 20}}>\r\n                    <br />\r\n                    <br />\r\n                     <br />\r\n                     <br />\r\n                    <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={next}>Current</Button>\r\n                    <br />\r\n                    <br />\r\n                    \r\n\r\n                    <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={next}>Savings</Button>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(inject('robot')(\r\n    observer(decorate(SelectAccountType, {\r\n        step: observable,\r\n        setStep: action,\r\n        password: observable,\r\n        setPassword: action\r\n    }))\r\n));","import React, { Component, Fragment, useState } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { decorate, observable, action } from 'mobx';\r\nimport { withRouter } from 'react-router-dom';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport { Button } from '@material-ui/core';\r\nimport { sleep } from '../utils/sleep';\r\nclass Withdrawal extends Component {\r\n    amount = ''\r\n    setAmount = (amount)=>{\r\n        this.amount=amount\r\n    }\r\n    componentDidMount() {\r\n        this.listenToAmountToWithdraw()\r\n    }\r\n    listenToAmountToWithdraw=async ()=>{\r\n        const { robot, next, setType } = this.props;\r\n        try {\r\n            await robot.say(\"Say the amount to withdraw\")\r\n            let text = await robot.listen();\r\n            this.setAmount(text)\r\n            await sleep(1000)\r\n            next()\r\n    \r\n        } catch (error) {\r\n            console.error(error)\r\n            await robot.say(error);\r\n            this.listenToAmountToWithdraw()\r\n        }\r\n    }\r\n    render() {\r\n        const { robot, next } = this.props;\r\n\r\n        return (\r\n            <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column', justifyItems: 'center', justifyContent: 'center', height: '100%' }}>\r\n                <h1 style={{ color: 'blue', textAlign: 'center' }}>Enter Amount</h1>\r\n                <form onSubmit={next} style={{ textAlign: 'center' }}>\r\n                    <FormControl margin=\"normal\" required fullWidth style={{ border: '3px solid blue' }}>\r\n                        <Input type='number'  name=\"amount\" autoFocus onChange={(e)=>{  this.setAmount(e.target.value)   }} value={this.amount} />\r\n                    </FormControl>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(inject('robot')(\r\n    observer(decorate(Withdrawal, {\r\n        amount: observable,\r\n        setAmount: action,\r\n        password: observable,\r\n        setPassword: action\r\n    }))\r\n));","import React, { Component, Fragment, useState } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { decorate, observable, action } from 'mobx';\r\nimport { withRouter } from 'react-router-dom';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport { Button } from '@material-ui/core';\r\nclass TakeCash extends Component {\r\n    amount = ''\r\n    setAmount = (amount)=>{\r\n        this.amount=amount\r\n    }\r\n    componentDidMount() {\r\n        const { robot, next } = this.props;\r\n        robot.say(\"Please take your cash!\")\r\n    }\r\n\r\n    render() {\r\n        const { robot, next } = this.props;\r\n\r\n        return (\r\n            <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column', justifyItems: 'center', justifyContent: 'center', height: '100%' }}>\r\n                <h1 style={{ color: 'blue', textAlign: 'center' }}>Please take your cash</h1>\r\n                <img src='images/cash_out.jpg' alt='CashOut' style={{width:'90%',height:'300px'}} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(inject('robot')(\r\n    observer(decorate(TakeCash, {\r\n        amount: observable,\r\n        setAmount: action,\r\n        password: observable,\r\n        setPassword: action\r\n    }))\r\n));","import React, { Component } from 'react';\r\n/* import logo from './logo.svg'; */\r\nimport './App.css';\r\nimport { Robot } from './utils/Robot';\r\nimport SecretNumber from './components/SecretNumber';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { decorate, observable, action } from 'mobx';\r\nimport { HashRouter, withRouter } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport SelectTransaction from './components/SelectTransaction';\r\nimport SelectAccountType from './components/SelectAccountType';\r\nimport Withdrawal from './components/Withdrawal';\r\nimport TakeCash from './components/TakeCash';\r\nimport alertify from 'alertifyjs';\r\n\r\nclass App extends Component {\r\n  step = '';\r\n  type=null;\r\n  setStep = (step) => {\r\n    this.step = step;\r\n  }\r\n  nextStep = (step) => {\r\n    this.setStep(this.step + 1);\r\n  }\r\n  setType = (type) => {\r\n    this.type=type;\r\n  }\r\n  showPincode = () => {\r\n    this.setStep(\"pincode\");\r\n  }\r\n  showSelectTransaction = async () => {\r\n    const { robot } = this.props;\r\n    await robot.say(\"Please wait while your transaction is processing: \")\r\n    this.setStep(\"select_transaction\");\r\n  }\r\n  showSelectAccountType = () => {\r\n    this.setStep(\"select_account_type\");\r\n    ///balance/i.test('balance')\r\n  }\r\n  showTakeCash = () => {\r\n    this.setStep(\"take_cash\");\r\n  }\r\n  nextAfterAccountType= ()=>{\r\n    this.setStep(this.type.toLowerCase())\r\n  }\r\n  componentDidMount() {\r\n    const { robot } = this.props;\r\n    document.body.click()\r\n    alertify.alert(\"Click ok to continue\", ()=>{\r\n      robot.say(\"Welcome\")\r\n      this.showPincode()\r\n    });\r\n  }\r\n  render() {\r\n    console.log(this.step)\r\n    return (\r\n      <div className=\"atm\">\r\n        <Card className=\"screen\">\r\n          {this.step === 'pincode' ? <SecretNumber next={this.showSelectTransaction} /> : null}\r\n          {this.step === 'select_transaction' ? <SelectTransaction next={this.showSelectAccountType} setType={this.setType} /> : null}\r\n          {this.step === 'select_account_type' ? <SelectAccountType next={this.nextAfterAccountType} /> : null}\r\n          {this.step === 'withdrawal' ? <Withdrawal next={this.showTakeCash} /> : null}\r\n          {this.step === 'take_cash' ? <TakeCash next={this.nextAfterAccountType}  /> : null}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//\r\nexport default\r\n  withRouter(inject('robot')(\r\n    observer(decorate(App, {\r\n      step: observable,\r\n      setStep: action,\r\n      password: observable,\r\n      setPassword: action\r\n    }))\r\n  ));","\r\n\r\nexport default class LocalStorage {\r\n    /**\r\n     * \r\n     * @param {Storage} storage \r\n     */\r\n    constructor(storage) {\r\n        this.storage = storage\r\n    }\r\n    async getRaw(key) {\r\n        return this.storage.getItem(key);\r\n    }\r\n    async get(key, defaultValue) {\r\n        return JSON.parse(await this.getRaw(key)) || defaultValue;\r\n    }\r\n    async setRaw(key, value) {\r\n        return this.storage.setItem(key, value);\r\n    }\r\n    // multiGet(...args){\r\n    //     return this.asyncStorage.multiGet(...args)\r\n    // }\r\n    // multiSet(...args){\r\n    //     return this.asyncStorage.multiSet(...args)\r\n    // }\r\n    set(key, value) {\r\n        return this.setRaw(key, JSON.stringify(value))\r\n    }\r\n    async remove(key) {\r\n        return this.storage.removeItem(key)\r\n    }\r\n\r\n}","import axios from 'axios'\r\n\r\nexport default class Request {\r\n    /**\r\n     * @param {axios} axios\r\n     */\r\n    constructor(axios) {\r\n        this.axios = axios;\r\n        this.axios.interceptors.response.use(function (response) {\r\n            // Do something with response data\r\n            //console.log(\"response\",response.data)\r\n            return response.data;\r\n        }, function (error) {\r\n            console.log(\"Request error\",  error)\r\n            // Do something with response error\r\n            if (error.response) {\r\n                // The request was made and the server responded with a status code\r\n                // that falls out of the range of 2xx\r\n                // console.log(error.response.data);\r\n                // console.log(error.response.status);\r\n                // console.log(error.response.hea);ders\r\n                return Promise.reject(error.response);\r\n            } else if (error.request) {\r\n                // The request was made but no response was received\r\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n                // http.ClientRequest in node.js\r\n                return Promise.reject(error.request);\r\n            } else {\r\n                // Something happened in setting up the request that triggered an Error\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    }\r\n    get(...args) {\r\n        return this.axios.get(...args)\r\n    }\r\n    post(...args) {\r\n        return this.axios.post(...args)\r\n    }\r\n    put(...args) {\r\n        return this.axios.put(...args)\r\n    }\r\n    head(...args) {\r\n        return this.axios.head(...args)\r\n    }\r\n    delete(...args) {\r\n        return this.axios.delete(...args)\r\n    }\r\n    /* param(obj) {\r\n        var temp = [];\r\n        for (i in obj){\r\n            var value=obj[i];\r\n            if(value instanceof Array){\r\n                value.forEach((item)=>{\r\n                    temp.push(`${i}[]=${item}`);\r\n                })\r\n            }\r\n            else{\r\n                temp.push(`${i}=${value}`);\r\n            }\r\n        }\r\n        return encodeURI(temp.join('&'));\r\n    } */\r\n    /**\r\n     * @param {string} url The address to upload the file\r\n     * @param {string} key The parameter for the file upload\r\n     * @param {File}   file The file to upload\r\n     */\r\n    async uploadFile(uri,key,file){\r\n        let formData = new FormData();\r\n        formData.append(key, file);\r\n        let result=await this.post(uri,formData)\r\n        return {url:result.url,thumb:this.getThumbUrl(result.url)};\r\n    }\r\n    getThumbUrl(url){\r\n\t\tlet urlArr=url.split('/');\r\n\t\tlet filename=urlArr.pop();\r\n\t\tlet baseUrl=urlArr.join('/');\r\n\t\treturn `${baseUrl}/thumb_${filename}`;\r\n\t\t//let storageRef = this.firebaseApp.storage().ref(`${this.basePath}/${fname}`);\r\n\t\t//return <Promise<string>>storageRef.getDownloadURL();\r\n\t}\r\n}","import { observable, autorun,action,computed,decorate} from 'mobx';\r\nimport Request from './Request'\r\nimport LocalStorage from './LocalStorage'\r\nclass AuthStore{\r\n    username=\"\"\r\n    confirm_password=\"\"\r\n    password=\"\"\r\n    name=\"\"\r\n    email=\"\"\r\n    phoneNumber=\"\"\r\n    address=\"\"\r\n    accountType=\"\"\r\n    image=null\r\n    thumb=null\r\n    imageUri\r\n    loading=false\r\n    authenticated=false\r\n    user=null\r\n\r\n    /**\r\n     * \r\n     * @param {Request} request \r\n     * @param {LocalStorage} localStorage \r\n     * @param {string} baseUrl\r\n     */\r\n    constructor(request,localStorage,baseUrl){\r\n        this.request=request;\r\n        this.baseUrl=baseUrl\r\n        this.localStorage=localStorage\r\n        this.localStorage.getRaw('username').then((username)=>{\r\n            console.log(\"Username is loaded\", username)\r\n            username&&this.setUsername(username);\r\n        })\r\n        this.localStorage.get('user').then((user)=>{\r\n            if(user){\r\n                this.setAuthenticated(true);\r\n                this.setUser(user)\r\n            }\r\n        })\r\n     \r\n        \r\n    }\r\n    get detailsValid(){\r\n        return !Boolean(this.name&&this.email&&this.username&&this.password&&this.password===this.confirm_password);\r\n    }\r\n    get isBusinessAccount(){\r\n        //console.log(\"Is business account\",typeof this.user.is_business,this.user.is_business,this.user.is_business?true:false)\r\n        return this.user.is_business?true:false\r\n    }\r\n    async isAuthenticated(){\r\n        if(this.authenticated)\r\n            return true\r\n        let user=await this.localStorage.get('user')\r\n\r\n        if(user)\r\n            return true\r\n        return false\r\n    }\r\n    async saveUser(user){\r\n        await this.localStorage.set('user',user);\r\n        this.setUser(user)\r\n    }\r\n    setImageUri(uri){\r\n        this.imageUri=uri;\r\n    }\r\n    setAccountType(type){\r\n       \r\n        if(type)\r\n            this.accountType=type\r\n    }\r\n    setUser(user){\r\n        this.user=user;\r\n    }\r\n    setUsername(username){\r\n        this.username=username;\r\n    }\r\n    setPassword(password){\r\n        this.password=password;\r\n    }\r\n    setConfirmPassword(confirm_password){\r\n        this.confirm_password=confirm_password;\r\n    }\r\n    setEmail(email){\r\n        this.email=email;\r\n    }\r\n    setName(name){\r\n        this.name=name;\r\n    }\r\n    setAddress(address){\r\n        this.address=address\r\n    }\r\n    setPhoneNumber(phone){\r\n        this.phoneNumber=phone\r\n    }\r\n    setLoading(loading){\r\n        this.loading=loading;\r\n    }\r\n    setAuthenticated(authenticated){\r\n        this.authenticated=authenticated;\r\n    }\r\n    get registrationComplete(){\r\n        if(this.user.is_business&&!this.user.business)\r\n           return false;\r\n        return true;\r\n        //console.log(\"is_business\",this.user.is_business,\"the business\",this.user.business)\r\n    }\r\n    // async uploadProfilePicture(){\r\n    //     const uri=this.imageUri;\r\n    //     let uriParts = uri.split('.');\r\n    //     let fileType = uriParts[uriParts.length - 1];\r\n      \r\n    //     let formData = new FormData();\r\n    //     formData.append('file', {\r\n    //       uri,\r\n    //       name: `photo.${fileType}`,\r\n    //       type: `image/${fileType}`,\r\n    //     });\r\n    //     let result=await this.request.post(this.baseUrl+\"/files\",formData)\r\n    //     this.image=result.data.url;\r\n    //     this.thumb=this.getThumbUrl(this.image);\r\n    // }\r\n    async uploadProfilePicture(){\r\n        //.${fileType}\r\n        /* const uri=this.imageUri;\r\n        let uriParts = uri.split('.');\r\n        let fileType = uriParts[uriParts.length - 1]; */\r\n\r\n        let result=await this.request.uploadFile(`${this.baseUrl}/files`,'file',this.imageUri);\r\n        this.image=result.url;\r\n        this.thumb=result.thumb;\r\n    }\r\n    resetForm(){\r\n        this.username=\"\"\r\n        this.password=\"\"\r\n        this.email=\"\"\r\n        this.name=\"\"\r\n        this.phoneNumber=\"\"\r\n        this.address=\"\"\r\n        this.accountType=\"\"\r\n        this.image=null\r\n        this.thumb=null\r\n        this.setImageUri(null)\r\n    }\r\n    handleResponse(e){\r\n        this.setLoading(false)\r\n        if(e&&e.data&&e.data.message)\r\n            return Promise.reject(new Error(e.data.message))\r\n        else if(e.message)\r\n            return Promise.reject(e);\r\n        else\r\n            return Promise.reject(e);\r\n    }\r\n    async handleAuthenticated(data){\r\n        //console.log(data)\r\n        let user=data.user;\r\n        user.is_business=Number( user.is_business)\r\n        user.is_customer=Number( user.is_customer)\r\n        this.authenticated=true\r\n        console.log(\"success logging in\",user)\r\n        await this.localStorage.set('user',user);\r\n        this.setUser(user)\r\n        this.localStorage.setRaw('username',this.username);\r\n        this.setLoading(false)\r\n    }\r\n    async login(){\r\n        this.setLoading(true)\r\n        console.log(\"Logging in to it\")\r\n        return this.request.post(this.baseUrl+\"/users/login\",{\r\n            username:this.username,\r\n            password:this.password\r\n        }).then(this.handleAuthenticated.bind(this)).catch(this.handleResponse);\r\n        \r\n        // return new Promise((resolve,reject)=>{\r\n        //     setTimeout(()=>{\r\n        //         this.setAuthenticated(true)\r\n        //         if(this.username===\"user\"&&this.password===\"pass\")\r\n        //             resolve(true)\r\n        //         else\r\n        //             reject(new Error(\"Username or password incorrect!\"))\r\n        //             this.setLoading(false)\r\n        //     },2000)\r\n            \r\n        // });\r\n    }\r\n    async register(){\r\n        this.setLoading(true)\r\n        try{\r\n            await this.uploadProfilePicture()\r\n        }\r\n        catch(e){\r\n            this.setLoading(false)\r\n            console.warn(e)\r\n            return Promise.reject(\"Error uploading profile image\")\r\n        }\r\n        let result=await this.request.post(this.baseUrl+\"/users/register\",{\r\n            \"name\":this.name,\r\n            \"email\":this.email,\r\n            \"username\":this.username,\r\n            \"password\":this.password,\r\n            \"image\":this.image,\r\n            \"thumb\":this.thumb\r\n            /* \"address\":this.address,\r\n            \"phone_number\":this.phoneNumber,\r\n            \"image\":this.image,\r\n            \"thumb\":this.thumb,\r\n            \"is_business\":this.accountType===\"seller\"?true:false,\r\n            \"is_customer\":this.accountType===\"buyer\"?true:false */\r\n        }).catch(this.handleResponse);\r\n        await this.handleAuthenticated(result);\r\n        return result;\r\n        // return new Promise((resolve,reject)=>{\r\n        //     setTimeout(()=>{\r\n        //         this.setAuthenticated(true)\r\n        //         if(this.username===\"user\"&&this.password===\"pass\")\r\n        //             resolve(true)\r\n        //         else\r\n        //             reject(new Error(\"Username or password incorrect!\"))\r\n        //             this.setLoading(false)\r\n        //     },2000)\r\n            \r\n        // });\r\n    }\r\n    logout(){\r\n        this.authenticated=false;\r\n        this.localStorage.remove('user')\r\n        //this.localStorage.remove('username')\r\n    }\r\n    // getUsername(){\r\n    //     return this.username;\r\n    // }\r\n}\r\n/* \r\n username=\"\"\r\n    password=\"\"\r\n    name=\"\"\r\n    email=\"\"\r\n    phoneNumber=\"\"\r\n    address=\"\"\r\n    accountType=\"\"\r\n    image=null\r\n    thumb=null\r\n    imageUri\r\n    loading=false\r\n    authenticated=false\r\n    user=null\r\n */\r\nexport default  decorate(AuthStore,{\r\n    username:observable,\r\n    password:observable,\r\n    confirm_password:observable,\r\n    setConfirmPassword:action,\r\n    name:observable,\r\n    email:observable,\r\n    phoneNumber:observable,\r\n    address:observable,\r\n    accountType:observable,\r\n    imageUri:observable,\r\n    loading:observable,\r\n    authenticated:observable,\r\n    user:observable,\r\n    setImageUri:action,\r\n    setAccountType:action,\r\n    setUser:action,\r\n    setUsername:action,\r\n    setPassword:action,\r\n    setEmail:action,\r\n    setName:action,\r\n\r\n    setAddress:action,\r\n    setPhoneNumber:action,\r\n    setLoading:action,\r\n    setAuthenticated:action,\r\n    detailsValid:computed,\r\n    registrationComplete:computed,\r\n    resetForm:action,\r\n    handleResponse:action.bound,\r\n    handleAuthenticated:action.bound,\r\n    login:action,\r\n    logout:action\r\n\r\n});","import LocalStorage from './LocalStorage'\r\n import Request from './Request'\r\nimport axios from 'axios'\r\nimport AuthStore from './AuthStore'\r\nimport {\r\n    configure\r\n} from 'mobx';\r\n\r\nconfigure({\r\n    enforceActions: true\r\n});\r\n\r\n//const baseUrl = \"http://israel.megalfacademy.com/api\"\r\n//const baseUrl = \"http://192.168.173.1/farm_market/public/api\"\r\nconst baseUrl = \"http://localhost/motivation_app/public/api\"\r\nlet request = new Request(axios);\r\nlet storage = new LocalStorage(localStorage);\r\nlet authStore = new AuthStore(request, storage, baseUrl)\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n    authStore,\r\n    axios,\r\n    request,\r\n    baseUrl,\r\n    localStorage:storage\r\n} ; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { HashRouter } from 'react-router-dom'\r\nimport './index.css';\r\nimport './alertify.min.css';\r\nimport './default.min.css';\r\nimport App from './App';\r\nimport {Provider } from 'mobx-react';\r\nimport stores from './stores/index'\r\nimport { Robot,RobotMock } from './utils/Robot';\r\nimport alertify from 'alertifyjs';\r\n\r\nconst providers={\r\n  ...stores,\r\n  robot: /* new RobotMock() */new Robot()\r\n}\r\nReactDOM.render((\r\n    <Provider {...providers}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n    </Provider>\r\n  ), document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}